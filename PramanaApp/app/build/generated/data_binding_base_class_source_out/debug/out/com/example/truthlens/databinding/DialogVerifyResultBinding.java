// Generated by view binder compiler. Do not edit!
package com.example.truthlens.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.airbnb.lottie.LottieAnimationView;
import com.example.truthlens.R;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.card.MaterialCardView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DialogVerifyResultBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final MaterialButton closeButton;

  @NonNull
  public final LinearLayout loaderContainer;

  @NonNull
  public final TextView loaderStatus;

  @NonNull
  public final LottieAnimationView loaderView;

  @NonNull
  public final MaterialButton openAppButton;

  @NonNull
  public final MaterialCardView resultCard;

  @NonNull
  public final ImageView resultImage;

  @NonNull
  public final TextView resultText;

  @NonNull
  public final MaterialButton retryButton;

  @NonNull
  public final TextView statusText;

  @NonNull
  public final TextView verdictPill;

  private DialogVerifyResultBinding(@NonNull LinearLayout rootView,
      @NonNull MaterialButton closeButton, @NonNull LinearLayout loaderContainer,
      @NonNull TextView loaderStatus, @NonNull LottieAnimationView loaderView,
      @NonNull MaterialButton openAppButton, @NonNull MaterialCardView resultCard,
      @NonNull ImageView resultImage, @NonNull TextView resultText,
      @NonNull MaterialButton retryButton, @NonNull TextView statusText,
      @NonNull TextView verdictPill) {
    this.rootView = rootView;
    this.closeButton = closeButton;
    this.loaderContainer = loaderContainer;
    this.loaderStatus = loaderStatus;
    this.loaderView = loaderView;
    this.openAppButton = openAppButton;
    this.resultCard = resultCard;
    this.resultImage = resultImage;
    this.resultText = resultText;
    this.retryButton = retryButton;
    this.statusText = statusText;
    this.verdictPill = verdictPill;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogVerifyResultBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogVerifyResultBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_verify_result, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogVerifyResultBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.closeButton;
      MaterialButton closeButton = ViewBindings.findChildViewById(rootView, id);
      if (closeButton == null) {
        break missingId;
      }

      id = R.id.loaderContainer;
      LinearLayout loaderContainer = ViewBindings.findChildViewById(rootView, id);
      if (loaderContainer == null) {
        break missingId;
      }

      id = R.id.loaderStatus;
      TextView loaderStatus = ViewBindings.findChildViewById(rootView, id);
      if (loaderStatus == null) {
        break missingId;
      }

      id = R.id.loaderView;
      LottieAnimationView loaderView = ViewBindings.findChildViewById(rootView, id);
      if (loaderView == null) {
        break missingId;
      }

      id = R.id.openAppButton;
      MaterialButton openAppButton = ViewBindings.findChildViewById(rootView, id);
      if (openAppButton == null) {
        break missingId;
      }

      id = R.id.resultCard;
      MaterialCardView resultCard = ViewBindings.findChildViewById(rootView, id);
      if (resultCard == null) {
        break missingId;
      }

      id = R.id.resultImage;
      ImageView resultImage = ViewBindings.findChildViewById(rootView, id);
      if (resultImage == null) {
        break missingId;
      }

      id = R.id.resultText;
      TextView resultText = ViewBindings.findChildViewById(rootView, id);
      if (resultText == null) {
        break missingId;
      }

      id = R.id.retryButton;
      MaterialButton retryButton = ViewBindings.findChildViewById(rootView, id);
      if (retryButton == null) {
        break missingId;
      }

      id = R.id.statusText;
      TextView statusText = ViewBindings.findChildViewById(rootView, id);
      if (statusText == null) {
        break missingId;
      }

      id = R.id.verdictPill;
      TextView verdictPill = ViewBindings.findChildViewById(rootView, id);
      if (verdictPill == null) {
        break missingId;
      }

      return new DialogVerifyResultBinding((LinearLayout) rootView, closeButton, loaderContainer,
          loaderStatus, loaderView, openAppButton, resultCard, resultImage, resultText, retryButton,
          statusText, verdictPill);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
