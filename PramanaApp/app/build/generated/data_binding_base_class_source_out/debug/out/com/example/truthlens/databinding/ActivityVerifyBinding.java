// Generated by view binder compiler. Do not edit!
package com.example.truthlens.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.airbnb.lottie.LottieAnimationView;
import com.example.truthlens.R;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.card.MaterialCardView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityVerifyBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ProgressBar confidenceBar;

  @NonNull
  public final ImageView imagePreview;

  @NonNull
  public final EditText inputText;

  @NonNull
  public final LottieAnimationView loader;

  @NonNull
  public final MaterialButton retryButton;

  @NonNull
  public final MaterialButton uploadImageButton;

  @NonNull
  public final MaterialCardView verdictCard;

  @NonNull
  public final TextView verdictText;

  @NonNull
  public final MaterialButton verifyButton;

  @NonNull
  public final TextView verifyResult;

  @NonNull
  public final TextView verifyTitle;

  private ActivityVerifyBinding(@NonNull LinearLayout rootView, @NonNull ProgressBar confidenceBar,
      @NonNull ImageView imagePreview, @NonNull EditText inputText,
      @NonNull LottieAnimationView loader, @NonNull MaterialButton retryButton,
      @NonNull MaterialButton uploadImageButton, @NonNull MaterialCardView verdictCard,
      @NonNull TextView verdictText, @NonNull MaterialButton verifyButton,
      @NonNull TextView verifyResult, @NonNull TextView verifyTitle) {
    this.rootView = rootView;
    this.confidenceBar = confidenceBar;
    this.imagePreview = imagePreview;
    this.inputText = inputText;
    this.loader = loader;
    this.retryButton = retryButton;
    this.uploadImageButton = uploadImageButton;
    this.verdictCard = verdictCard;
    this.verdictText = verdictText;
    this.verifyButton = verifyButton;
    this.verifyResult = verifyResult;
    this.verifyTitle = verifyTitle;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityVerifyBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityVerifyBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_verify, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityVerifyBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.confidenceBar;
      ProgressBar confidenceBar = ViewBindings.findChildViewById(rootView, id);
      if (confidenceBar == null) {
        break missingId;
      }

      id = R.id.imagePreview;
      ImageView imagePreview = ViewBindings.findChildViewById(rootView, id);
      if (imagePreview == null) {
        break missingId;
      }

      id = R.id.inputText;
      EditText inputText = ViewBindings.findChildViewById(rootView, id);
      if (inputText == null) {
        break missingId;
      }

      id = R.id.loader;
      LottieAnimationView loader = ViewBindings.findChildViewById(rootView, id);
      if (loader == null) {
        break missingId;
      }

      id = R.id.retryButton;
      MaterialButton retryButton = ViewBindings.findChildViewById(rootView, id);
      if (retryButton == null) {
        break missingId;
      }

      id = R.id.uploadImageButton;
      MaterialButton uploadImageButton = ViewBindings.findChildViewById(rootView, id);
      if (uploadImageButton == null) {
        break missingId;
      }

      id = R.id.verdictCard;
      MaterialCardView verdictCard = ViewBindings.findChildViewById(rootView, id);
      if (verdictCard == null) {
        break missingId;
      }

      id = R.id.verdictText;
      TextView verdictText = ViewBindings.findChildViewById(rootView, id);
      if (verdictText == null) {
        break missingId;
      }

      id = R.id.verifyButton;
      MaterialButton verifyButton = ViewBindings.findChildViewById(rootView, id);
      if (verifyButton == null) {
        break missingId;
      }

      id = R.id.verifyResult;
      TextView verifyResult = ViewBindings.findChildViewById(rootView, id);
      if (verifyResult == null) {
        break missingId;
      }

      id = R.id.verifyTitle;
      TextView verifyTitle = ViewBindings.findChildViewById(rootView, id);
      if (verifyTitle == null) {
        break missingId;
      }

      return new ActivityVerifyBinding((LinearLayout) rootView, confidenceBar, imagePreview,
          inputText, loader, retryButton, uploadImageButton, verdictCard, verdictText, verifyButton,
          verifyResult, verifyTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
