{"ast":null,"code":"import React,{useState,useEffect}from'react';import'./App.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const API_BASE_URL='https://truthlens-api-276376440888.us-central1.run.app';function App(){var _result$verdict;const[claim,setClaim]=useState('');const[image,setImage]=useState(null);const[mode,setMode]=useState('fast');const[language,setLanguage]=useState('en');const[isVerifying,setIsVerifying]=useState(false);const[result,setResult]=useState(null);const[step,setStep]=useState('');const[metrics,setMetrics]=useState({latency:0,cost:0});useEffect(()=>{// Register service worker\nif('serviceWorker'in navigator){navigator.serviceWorker.register('/sw.js');}// Handle share target data\nconst urlParams=new URLSearchParams(window.location.search);const sharedText=urlParams.get('text')||urlParams.get('title');if(sharedText){setClaim(sharedText);}},[]);const handleVerification=async()=>{if(!claim.trim())return;setIsVerifying(true);setResult(null);setStep('Submitting...');const startTime=Date.now();try{const requestBody={text:claim,mode:mode,language:language};setStep('Calling Gemini AI...');const response=await fetch(\"\".concat(API_BASE_URL,\"/v1/verify-test\"),{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(requestBody)});setStep('Checking Fact Database...');const data=await response.json();setStep('Generating Verdict...');const latency=Date.now()-startTime;setMetrics({latency,cost:data.cost||0});setResult(data);setStep('Complete');}catch(error){console.error('Verification failed:',error);setResult({error:'Verification failed. Please try again.',verdict:'error'});}finally{setIsVerifying(false);}};const handleImageUpload=event=>{const file=event.target.files[0];if(file){setImage(file);}};const getVerdictColor=verdict=>{switch(verdict){case'true':return'#4caf50';case'false':return'#f44336';case'misleading':return'#ff9800';case'unverified':return'#9e9e9e';default:return'#2196f3';}};const getVerdictIcon=verdict=>{switch(verdict){case'true':return'✓';case'false':return'✗';case'misleading':return'⚠';case'unverified':return'?';default:return'ℹ';}};return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsxs(\"header\",{className:\"App-header\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"\\uD83D\\uDD0D TruthLens\"}),/*#__PURE__*/_jsx(\"p\",{children:\"AI-Powered Fact Verification\"})]}),/*#__PURE__*/_jsxs(\"main\",{className:\"App-main\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"verification-form\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"input-section\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"claim\",children:\"What would you like to verify?\"}),/*#__PURE__*/_jsx(\"textarea\",{id:\"claim\",value:claim,onChange:e=>setClaim(e.target.value),placeholder:\"Paste text or enter a claim to verify...\",rows:4})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"image-section\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"image\",children:\"Upload image (optional)\"}),/*#__PURE__*/_jsx(\"input\",{type:\"file\",id:\"image\",accept:\"image/*\",onChange:handleImageUpload}),image&&/*#__PURE__*/_jsx(\"div\",{className:\"image-preview\",children:/*#__PURE__*/_jsx(\"img\",{src:URL.createObjectURL(image),alt:\"Preview\"})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"options-section\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"option-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"mode\",children:\"Verification Mode:\"}),/*#__PURE__*/_jsxs(\"select\",{id:\"mode\",value:mode,onChange:e=>setMode(e.target.value),children:[/*#__PURE__*/_jsx(\"option\",{value:\"fast\",children:\"Fast (AI only)\"}),/*#__PURE__*/_jsx(\"option\",{value:\"deep\",children:\"Deep (AI + Fact Check DB)\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"option-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"language\",children:\"Language:\"}),/*#__PURE__*/_jsxs(\"select\",{id:\"language\",value:language,onChange:e=>setLanguage(e.target.value),children:[/*#__PURE__*/_jsx(\"option\",{value:\"en\",children:\"English\"}),/*#__PURE__*/_jsx(\"option\",{value:\"hi\",children:\"Hindi\"}),/*#__PURE__*/_jsx(\"option\",{value:\"ta\",children:\"Tamil\"})]})]})]}),/*#__PURE__*/_jsx(\"button\",{className:\"verify-button\",onClick:handleVerification,disabled:isVerifying||!claim.trim(),children:isVerifying?'Verifying...':'Verify Claim'})]}),isVerifying&&/*#__PURE__*/_jsxs(\"div\",{className:\"progress-section\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"stepper\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"step \".concat(step==='Submitting...'?'active':''),children:[/*#__PURE__*/_jsx(\"span\",{className:\"step-number\",children:\"1\"}),/*#__PURE__*/_jsx(\"span\",{className:\"step-label\",children:\"Submit\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"step \".concat(step==='Calling Gemini AI...'?'active':''),children:[/*#__PURE__*/_jsx(\"span\",{className:\"step-number\",children:\"2\"}),/*#__PURE__*/_jsx(\"span\",{className:\"step-label\",children:\"Gemini\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"step \".concat(step==='Checking Fact Database...'?'active':''),children:[/*#__PURE__*/_jsx(\"span\",{className:\"step-number\",children:\"3\"}),/*#__PURE__*/_jsx(\"span\",{className:\"step-label\",children:\"Fact DB\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"step \".concat(step==='Generating Verdict...'?'active':''),children:[/*#__PURE__*/_jsx(\"span\",{className:\"step-number\",children:\"4\"}),/*#__PURE__*/_jsx(\"span\",{className:\"step-label\",children:\"Verdict\"})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"current-step\",children:step})]}),result&&/*#__PURE__*/_jsxs(\"div\",{className:\"result-section\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"verdict-card\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"verdict-header\",style:{backgroundColor:getVerdictColor(result.verdict)},children:[/*#__PURE__*/_jsx(\"span\",{className:\"verdict-icon\",children:getVerdictIcon(result.verdict)}),/*#__PURE__*/_jsx(\"span\",{className:\"verdict-text\",children:((_result$verdict=result.verdict)===null||_result$verdict===void 0?void 0:_result$verdict.toUpperCase())||'ERROR'}),/*#__PURE__*/_jsx(\"span\",{className:\"confidence\",children:result.confidence?\"\".concat(Math.round(result.confidence*100),\"%\"):''})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"verdict-content\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"AI Explanation\"}),/*#__PURE__*/_jsx(\"p\",{children:result.explanation||result.error}),result.citations&&result.citations.length>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"citations\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Verified Sources\"}),/*#__PURE__*/_jsx(\"ul\",{children:result.citations.map((citation,index)=>/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"a\",{href:citation.url,target:\"_blank\",rel:\"noopener noreferrer\",children:citation.title||citation.url}),/*#__PURE__*/_jsx(\"span\",{className:\"source\",children:citation.publisher})]},index))})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"metrics\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"metric\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"metric-label\",children:\"Latency\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"metric-value\",children:[metrics.latency,\"ms\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"metric\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"metric-label\",children:\"Cost\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"metric-value\",children:[\"$\",metrics.cost.toFixed(4)]})]})]})]})]}),/*#__PURE__*/_jsx(\"footer\",{className:\"App-footer\",children:/*#__PURE__*/_jsx(\"p\",{children:\"Powered by Google Cloud AI \\u2022 Transparent \\u2022 Verifiable\"})})]});}export default App;","map":{"version":3,"names":["React","useState","useEffect","jsx","_jsx","jsxs","_jsxs","API_BASE_URL","App","_result$verdict","claim","setClaim","image","setImage","mode","setMode","language","setLanguage","isVerifying","setIsVerifying","result","setResult","step","setStep","metrics","setMetrics","latency","cost","navigator","serviceWorker","register","urlParams","URLSearchParams","window","location","search","sharedText","get","handleVerification","trim","startTime","Date","now","requestBody","text","response","fetch","concat","method","headers","body","JSON","stringify","data","json","error","console","verdict","handleImageUpload","event","file","target","files","getVerdictColor","getVerdictIcon","className","children","htmlFor","id","value","onChange","e","placeholder","rows","type","accept","src","URL","createObjectURL","alt","onClick","disabled","style","backgroundColor","toUpperCase","confidence","Math","round","explanation","citations","length","map","citation","index","href","url","rel","title","publisher","toFixed"],"sources":["/Users/apple/OrangeLens/app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\n\nconst API_BASE_URL = 'https://truthlens-api-276376440888.us-central1.run.app';\n\nfunction App() {\n  const [claim, setClaim] = useState('');\n  const [image, setImage] = useState(null);\n  const [mode, setMode] = useState('fast');\n  const [language, setLanguage] = useState('en');\n  const [isVerifying, setIsVerifying] = useState(false);\n  const [result, setResult] = useState(null);\n  const [step, setStep] = useState('');\n  const [metrics, setMetrics] = useState({ latency: 0, cost: 0 });\n\n  useEffect(() => {\n    // Register service worker\n    if ('serviceWorker' in navigator) {\n      navigator.serviceWorker.register('/sw.js');\n    }\n\n    // Handle share target data\n    const urlParams = new URLSearchParams(window.location.search);\n    const sharedText = urlParams.get('text') || urlParams.get('title');\n    if (sharedText) {\n      setClaim(sharedText);\n    }\n  }, []);\n\n  const handleVerification = async () => {\n    if (!claim.trim()) return;\n\n    setIsVerifying(true);\n    setResult(null);\n    setStep('Submitting...');\n    \n    const startTime = Date.now();\n    \n    try {\n      const requestBody = {\n        text: claim,\n        mode: mode,\n        language: language\n      };\n\n      setStep('Calling Gemini AI...');\n      \n      const response = await fetch(`${API_BASE_URL}/v1/verify-test`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(requestBody)\n      });\n\n      setStep('Checking Fact Database...');\n      \n      const data = await response.json();\n      \n      setStep('Generating Verdict...');\n      \n      const latency = Date.now() - startTime;\n      setMetrics({ latency, cost: data.cost || 0 });\n      \n      setResult(data);\n      setStep('Complete');\n      \n    } catch (error) {\n      console.error('Verification failed:', error);\n      setResult({ \n        error: 'Verification failed. Please try again.',\n        verdict: 'error'\n      });\n    } finally {\n      setIsVerifying(false);\n    }\n  };\n\n  const handleImageUpload = (event) => {\n    const file = event.target.files[0];\n    if (file) {\n      setImage(file);\n    }\n  };\n\n  const getVerdictColor = (verdict) => {\n    switch (verdict) {\n      case 'true': return '#4caf50';\n      case 'false': return '#f44336';\n      case 'misleading': return '#ff9800';\n      case 'unverified': return '#9e9e9e';\n      default: return '#2196f3';\n    }\n  };\n\n  const getVerdictIcon = (verdict) => {\n    switch (verdict) {\n      case 'true': return '✓';\n      case 'false': return '✗';\n      case 'misleading': return '⚠';\n      case 'unverified': return '?';\n      default: return 'ℹ';\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>🔍 TruthLens</h1>\n        <p>AI-Powered Fact Verification</p>\n      </header>\n\n      <main className=\"App-main\">\n        <div className=\"verification-form\">\n          <div className=\"input-section\">\n            <label htmlFor=\"claim\">What would you like to verify?</label>\n            <textarea\n              id=\"claim\"\n              value={claim}\n              onChange={(e) => setClaim(e.target.value)}\n              placeholder=\"Paste text or enter a claim to verify...\"\n              rows={4}\n            />\n          </div>\n\n          <div className=\"image-section\">\n            <label htmlFor=\"image\">Upload image (optional)</label>\n            <input\n              type=\"file\"\n              id=\"image\"\n              accept=\"image/*\"\n              onChange={handleImageUpload}\n            />\n            {image && (\n              <div className=\"image-preview\">\n                <img src={URL.createObjectURL(image)} alt=\"Preview\" />\n              </div>\n            )}\n          </div>\n\n          <div className=\"options-section\">\n            <div className=\"option-group\">\n              <label htmlFor=\"mode\">Verification Mode:</label>\n              <select\n                id=\"mode\"\n                value={mode}\n                onChange={(e) => setMode(e.target.value)}\n              >\n                <option value=\"fast\">Fast (AI only)</option>\n                <option value=\"deep\">Deep (AI + Fact Check DB)</option>\n              </select>\n            </div>\n\n            <div className=\"option-group\">\n              <label htmlFor=\"language\">Language:</label>\n              <select\n                id=\"language\"\n                value={language}\n                onChange={(e) => setLanguage(e.target.value)}\n              >\n                <option value=\"en\">English</option>\n                <option value=\"hi\">Hindi</option>\n                <option value=\"ta\">Tamil</option>\n              </select>\n            </div>\n          </div>\n\n          <button\n            className=\"verify-button\"\n            onClick={handleVerification}\n            disabled={isVerifying || !claim.trim()}\n          >\n            {isVerifying ? 'Verifying...' : 'Verify Claim'}\n          </button>\n        </div>\n\n        {isVerifying && (\n          <div className=\"progress-section\">\n            <div className=\"stepper\">\n              <div className={`step ${step === 'Submitting...' ? 'active' : ''}`}>\n                <span className=\"step-number\">1</span>\n                <span className=\"step-label\">Submit</span>\n              </div>\n              <div className={`step ${step === 'Calling Gemini AI...' ? 'active' : ''}`}>\n                <span className=\"step-number\">2</span>\n                <span className=\"step-label\">Gemini</span>\n              </div>\n              <div className={`step ${step === 'Checking Fact Database...' ? 'active' : ''}`}>\n                <span className=\"step-number\">3</span>\n                <span className=\"step-label\">Fact DB</span>\n              </div>\n              <div className={`step ${step === 'Generating Verdict...' ? 'active' : ''}`}>\n                <span className=\"step-number\">4</span>\n                <span className=\"step-label\">Verdict</span>\n              </div>\n            </div>\n            <div className=\"current-step\">{step}</div>\n          </div>\n        )}\n\n        {result && (\n          <div className=\"result-section\">\n            <div className=\"verdict-card\">\n              <div \n                className=\"verdict-header\"\n                style={{ backgroundColor: getVerdictColor(result.verdict) }}\n              >\n                <span className=\"verdict-icon\">\n                  {getVerdictIcon(result.verdict)}\n                </span>\n                <span className=\"verdict-text\">\n                  {result.verdict?.toUpperCase() || 'ERROR'}\n                </span>\n                <span className=\"confidence\">\n                  {result.confidence ? `${Math.round(result.confidence * 100)}%` : ''}\n                </span>\n              </div>\n              \n              <div className=\"verdict-content\">\n                <h3>AI Explanation</h3>\n                <p>{result.explanation || result.error}</p>\n                \n                {result.citations && result.citations.length > 0 && (\n                  <div className=\"citations\">\n                    <h4>Verified Sources</h4>\n                    <ul>\n                      {result.citations.map((citation, index) => (\n                        <li key={index}>\n                          <a href={citation.url} target=\"_blank\" rel=\"noopener noreferrer\">\n                            {citation.title || citation.url}\n                          </a>\n                          <span className=\"source\">{citation.publisher}</span>\n                        </li>\n                      ))}\n                    </ul>\n                  </div>\n                )}\n              </div>\n            </div>\n\n            <div className=\"metrics\">\n              <div className=\"metric\">\n                <span className=\"metric-label\">Latency</span>\n                <span className=\"metric-value\">{metrics.latency}ms</span>\n              </div>\n              <div className=\"metric\">\n                <span className=\"metric-label\">Cost</span>\n                <span className=\"metric-value\">${metrics.cost.toFixed(4)}</span>\n              </div>\n            </div>\n          </div>\n        )}\n      </main>\n\n      <footer className=\"App-footer\">\n        <p>Powered by Google Cloud AI • Transparent • Verifiable</p>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}